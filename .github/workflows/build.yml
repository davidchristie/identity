name: Build

on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Run unit tests
        run: go test $(go list ./... | grep -v /test/)
      - name: Print docker configuration
        run: docker-compose config
      - name: Start docker services
        run: docker-compose up -d
      - name: Wait 10 seconds
        run: sleep 10
      - name: Run acceptance tests
        run: go test ./test/acceptance/...
      - if: failure()
        name: Print docker logs
        run: docker-compose logs

  push-image-to-docker-hub:
    name: Push image to Docker Hub
    needs: Test
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/identity
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - uses: actions/checkout@v1
      - name: Login to Docker Hub
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Build and tag the image
        run: docker build --tag $DOCKER_IMAGE:latest .
      - name: Push image to Docker Hub
        run: docker push $DOCKER_IMAGE:latest

  deploy-to-heroku:
    name: Deploy to Heroku
    needs: Test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      HEROKU_APP: ${{ secrets.HEROKU_APP }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    steps:
      - uses: actions/checkout@v1
      - name: Login to Heroku Container registry
        run: heroku container:login
      - name: Build and push
        run: heroku container:push -a $HEROKU_APP web
      - name: Release
        run: heroku container:release -a $HEROKU_APP web
